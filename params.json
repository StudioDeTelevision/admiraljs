{"name":"Admiraljs","tagline":"the pluggable admin interface","body":"AdmiralJS\r\n===========\r\n**Lightweight, cross framework, plug and play admin interface**  \r\n  \r\nEntirely written in javascript, with dependencies on bootstrap, jquery, backbone, underscore,\r\non a module logic with REQUIREJS  \r\n  \r\n**PLUGGABLE** on any RESTFUL API  \r\nex: with codeigniter, symphony, expressjs, railsjs or whatever and as soon as you can provide http crud controllers http://myserver/todo/create http://myserver/todo/update http://myserver/todo/find http://myserver/todo/destroy  \r\n  \r\neasily **CONFIGURABLE**:  \r\nconfig.json - define your project settings  \r\nschemas.json - define your models  \r\n  \r\n**EXTENSIBLE** - define your own field editors  \r\n  \r\nActually developped for a project based on SAILS.JS  \r\nsails installation must have Access-Control-Allow-Origin   \r\nsetting allRoutes: true, in config/cors.js  \r\n\r\n## SETUP\r\n\r\nYou must provide settings and data structure in \r\nconfig/config.json\r\nconfig/schemas.json\r\n\r\nsee \r\nconfig/config.sample.json\r\nconfig/schemas.sample.json\r\n\r\n## CONFIG.JSON\r\nA configuration object that will be loaded at startup.  \r\nAttributes are:  \r\n**title** the name of your project, will be displayed on top of the page  \r\n**api** base url of your restful api (must end with /)   \r\n**debug** debugging mode (true/false)\r\n**fileUploadUrl** the url for file upload  \r\n**fileDir** full url for reading files  \r\n**customClass** relative path to your custom class ex: \"./custom/example/example\"\r\n**dateTimeFormat** define your time format for fields like date or datetime (ex: \"YYYY-MM-DD HH:mm:ss\" )  \r\n**tinymce** define tinymce toolbar for textarea\r\n\r\n## SCHEMAS.JSON\r\nAn array of schema configuration \r\nAttributes are:  \r\n**schemaName** a unique configuration name  \r\n**model** your model name   \r\n**label** the label displayed in left menu bar  \r\nthen define the right url for:  \r\n**create** ex: \"events/create\" (will use the base url defined in config.json)  \r\n**update**  \r\n**find**  \r\n**destroy**  \r\nyou may specify a find filter ex:  \r\n\"findFilter\":{\"where\":{\"space_id\":\"Pm4jPHmoakKcRAEo4\"}},  \r\nin case your schema  \r\nTIP:  \r\nyou may use many schemas based on the same model  \r\nyou'll have to give them different schemaName  \r\nand you may also provide different findFilter  \r\n(this can be useful on nosql database, if you want to use a single collection for documents with differents schemas)  \r\n**listFields** the fields displayed in a list view  \r\n**fields** define your fields (see config/example/schemas.json for more explanations)  \r\n  \r\n\r\n## EDITORS \r\nthey mostly inherit from core/editor  \r\na static method View.display is used to customize appearance in view list mode  \r\n\r\n## CUSTOM CLASS, CUSTOM EDITORS\r\ndefined in config.json\r\npoints to a class in the 'custom' folder\r\npermits to define your own field editors (custom string editors, custom images galleries etc )\r\n\r\n\r\n## BEST PRACTICE, CONTRIBUTION AND SHARING...\r\nChanges on ADMIRALJS should only occurs in CONFIG AND CUSTOM Folder.\r\nYou might of course also make propositions and fork on the core of the system.\r\nDon't forget to share your own field editors if you think they might help others \r\n\r\n## START UP\r\nlaunch index.html on a web server (can be node in a static public folder or apache or ...)  \r\nlogin with admin / admin\r\n\r\n## DOCUMENTATION\r\nsoon available ...  \r\nyou may ask me questions on studiodetelevision@gmail.com  \r\nany help is welcome !!!!!   \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}